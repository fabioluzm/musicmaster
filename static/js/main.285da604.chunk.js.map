{"version":3,"sources":["config.jsx","hash.jsx","app.jsx","index.js"],"names":["LOCAL_DOMAINS","includes","window","location","hostname","alert","redirectUri","hash","substring","split","reduce","initial","item","parts","decodeURIComponent","App","props","state","token","query","_token","access_token","this","setState","getSearchQuery","console","log","AUTHORIZE_URL","FETCH_URL","fetch","method","headers","then","response","json","className","FormGroup","InputGroup","FormControl","type","placeholder","value","onChange","event","target","onKeyPress","key","searchArtist","Append","Button","onClick","Component","ReactDOM","render","document","getElementById"],"mappings":"sPAUaA,G,MAAgB,CAAC,YAAa,cAC3CA,EAAcC,SAASC,OAAOC,SAASC,UAAYC,MAAMH,OAAOC,SAASC,UAEzE,IACaE,EADKN,EAAcC,SAASC,OAAOC,SAASC,UAAY,iCAAnD,UAAyFF,OAAOC,SAASC,SAAzG,yBCZZG,EAAOL,OAAOC,SAASI,KAC1BC,UAAU,GACVC,MAAM,KACNC,QAAO,SAASC,EAASC,GACxB,GAAIA,EAAM,CACR,IAAIC,EAAQD,EAAKH,MAAM,KACvBE,EAAQE,EAAM,IAAMC,mBAAmBD,EAAM,IAE/C,OAAOF,IACN,IACLT,OAAOC,SAASI,KAAO,GAERA,Q,wCCiGAQ,E,YArGX,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KAEDC,MAAQ,CACTC,MAAO,KACPC,MAAO,IALI,E,iFAWf,IAAIC,EAASb,EAAKc,aAEdD,IAEFE,KAAKC,SAAS,CACZL,MAAOE,IAETE,KAAKE,eAAeJ,M,qCAKtBK,QAAQC,IAAI,aAAcJ,KAAKL,OAG/B,IAAMU,EAAa,UFnCC,0CEmCD,qBFhCH,mCEgCG,yBAAwDrB,EAAxD,0BFlBC,QEkBD,wBFjBD,SEmBlBJ,OAAOC,SAAWwB,I,qCAGPP,GACX,IACMQ,EAAS,UADE,qCACF,cAAoBN,KAAKL,MAAME,MAA/B,wBAKfU,MAAMD,EAAW,CACbE,OAAQ,OACRC,QAAS,CACL,cAAiB,gLAGxBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAE,GAAI,OAAIT,QAAQC,IAAI,OAAQQ,Q,+BAa5B,IAAD,OACL,OACI,yBAAKC,UAAU,OACX,yBAAKA,UAAU,aAAf,gBAEA,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACIC,KAAK,OACLC,YAAY,uBACZC,MAAOnB,KAAKL,MAAME,MAClBuB,SAAU,SAAAC,GACF,EAAKpB,SAAS,CAACJ,MAAOwB,EAAMC,OAAOH,SAG3CI,WAAY,SAAAF,GACJ,MAAqB,UAAdA,EAAMG,IAAkB,EAAKC,eAAiB,MAKjE,kBAACV,EAAA,EAAWW,OAAZ,KACI,kBAACC,EAAA,EAAD,CACIC,QAAS,kBAAI,EAAKH,iBAElB,kBAAC,IAAD,UAMhB,yBAAKZ,UAAU,eACX,+CACA,6CAEJ,yBAAKA,UAAU,WAAf,gB,GA9FEgB,aCJlBC,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.285da604.chunk.js","sourcesContent":["export const authEndpoint = \"https://accounts.spotify.com/authorize?\";\r\n\r\n// Replace with your app's client ID, redirect URI and desired scopes\r\nexport const clientId = \"96fddf30b44b417e8427c597040731cc\";\r\n\r\n// if (location.hostname === \"localhost\" || location.hostname === \"127.0.0.1\") {\r\n//     export const redirectUri = \"http://localhost:3000/callback\";\r\n// } else {\r\n//     export const redirectUri = \"http://localhost:3000/callback\";\r\n// }\r\nexport const LOCAL_DOMAINS = [\"localhost\", \"127.0.0.1\"];\r\nLOCAL_DOMAINS.includes(window.location.hostname) ? alert(window.location.hostname) : alert(window.location.hostname);\r\n\r\nlet redirectUrl = LOCAL_DOMAINS.includes(window.location.hostname) ? \"http://localhost:3000/callback\" : `${window.location.hostname}/musicmaster/callback`;\r\nexport const redirectUri = redirectUrl;\r\n\r\n// export const redirectUri = \"http://localhost:3000/callback\";\r\nexport const responseType = \"token\";\r\nexport const showDialog = \"false\";\r\nexport const scopes = [\r\n    \"user-top-read\",\r\n    \"user-read-currently-playing\",\r\n    \"user-read-playback-state\",\r\n];","// Get the hash of the url\r\nconst hash = window.location.hash\r\n  .substring(1)\r\n  .split(\"&\")\r\n  .reduce(function(initial, item) {\r\n    if (item) {\r\n      var parts = item.split(\"=\");\r\n      initial[parts[0]] = decodeURIComponent(parts[1]);\r\n    }\r\n    return initial;\r\n  }, {});\r\nwindow.location.hash = \"\";\r\n\r\nexport default hash;","import React, { Component } from 'react';\r\nimport \"./app.css\";\r\nimport { authEndpoint, clientId, redirectUri, responseType, scopes, showDialog } from \"./config\";\r\nimport hash from \"./hash\";\r\nimport { FormGroup, FormControl, InputGroup, Button } from 'react-bootstrap';\r\nimport { GoSearch } from \"react-icons/go\";\r\n\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            token: null,\r\n            query: '',\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Set token\r\n        let _token = hash.access_token;\r\n    \r\n        if (_token) {\r\n          // Set token\r\n          this.setState({\r\n            token: _token\r\n          });\r\n          this.getSearchQuery(_token);\r\n        }\r\n      }\r\n\r\n    searchArtist() {\r\n        console.log('this.state', this.state);\r\n       \r\n        // const AUTHORIZE_URL = `${authEndpoint}client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\"%20\")}&response_type=${responseType}&show_dialog=${showDialog}`;\r\n        const AUTHORIZE_URL = `${authEndpoint}client_id=${clientId}&redirect_uri=${redirectUri}&response_type=${responseType}&show_dialog=${showDialog}`;\r\n            \r\n        window.location = AUTHORIZE_URL;\r\n    }\r\n\r\n    getSearchQuery(_token) {\r\n        const BASE_URL = 'https://api.spotify.com/v1/search?';\r\n        const FETCH_URL = `${BASE_URL}q='${this.state.query}&type=artist&limit=1`;\r\n        // console.log('FETCH_URL', FETCH_URL);\r\n\r\n        let token = 'Bearer' + _token;\r\n\r\n        fetch(FETCH_URL, { \r\n            method: 'POST',\r\n            headers: {\r\n                'Authorization': 'Bearer BQBjvuYP3nKsaUI_KGLwdPtzym5FtKqphLtBeIA-MGhZRU8V8ql3Q-kPfLgsPvbAGjS7fdziS699d6H5t_cJvYBQ3QFzqSEGzbZRoX81LBtMNfgaOJeiu-BMT0cZv_RmgORispo9E20_EFaTdzJp3XJ55iuQQCz2cb0', \r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        .then(json => console.log('json', json));\r\n    }\r\n    // componentDidMount () {\r\n    //     let _token = hash.access_token;\r\n        \r\n    //     if(_token) {\r\n    //         this.setState({\r\n    //             token: _token\r\n    //         });\r\n    //     }\r\n    // }    \r\n        \r\n\r\n    render() {\r\n        return (\r\n            <div className=\"app\">\r\n                <div className=\"app-title\">Music Master</div>\r\n                \r\n                <FormGroup>\r\n                    <InputGroup>\r\n                        <FormControl \r\n                            type=\"text\"\r\n                            placeholder=\"search for an artist\"\r\n                            value={this.state.query}\r\n                            onChange={event => {\r\n                                    this.setState({query: event.target.value})\r\n                                }\r\n                            }\r\n                            onKeyPress={event => {\r\n                                    return event.key === 'Enter' ? this.searchArtist() : '';\r\n                                }\r\n                            }\r\n                        />\r\n                            \r\n                        <InputGroup.Append>\r\n                            <Button \r\n                                onClick={()=>this.searchArtist()}\r\n                            >\r\n                                <GoSearch />\r\n                            </Button>\r\n                        </InputGroup.Append>\r\n                    </InputGroup>\r\n                </FormGroup>\r\n\r\n                <div className=\"app-profile\">\r\n                    <div>Artist Picture</div>\r\n                    <div>Artist Name</div>\r\n                </div>\r\n                <div className=\"gallery\">\r\n                    Gallery\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './app';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}