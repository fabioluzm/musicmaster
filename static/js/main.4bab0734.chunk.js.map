{"version":3,"sources":["configs/config.jsx","components/profile.jsx","app.jsx","index.js"],"names":["AUTH_TOKEN","Profile","artist","name","followers","total","images","url","genres","this","props","undefined","className","src","alt","map","genre","index","ags","length","key","Component","App","state","query","console","log","FETCH_URL","fetch","method","headers","mode","cache","then","response","json","artists","items","setState","FormGroup","InputGroup","FormControl","type","placeholder","value","onChange","event","target","onKeyPress","searchArtist","Append","Button","onClick","ReactDOM","render","document","getElementById"],"mappings":"oPA4BaA,EAAU,iBAHF,sSCtBAC,G,uLAIb,IAAIC,EAAS,CACTC,KAAM,GACNC,UAAW,CACPC,MAAO,IAEXC,OAAQ,CACJ,CAACC,IAAK,KAEVC,OAAQ,IAOZ,OAHAN,EAA+B,OAAtBO,KAAKC,MAAMR,aAAyCS,IAAtBF,KAAKC,MAAMR,OAAuBO,KAAKC,MAAMR,OAASA,OAGhES,IAAtBF,KAAKC,MAAMR,QAA8C,OAAtBO,KAAKC,MAAMR,OAGjD,yBAAKU,UAAU,WACX,yBACIA,UAAU,cACVC,IAAKX,EAAOI,OAAO,GAAGC,IACtBO,IAAI,KAGR,yBAAKF,UAAU,gBACX,yBAAKA,UAAU,gBAAf,gBACkBV,EAAOC,MAGzB,yBAAKS,UAAU,qBAAf,oBACsBV,EAAOE,UAAUC,OAGvC,yBAAKO,UAAU,kBAAf,kBACoBV,EAAOM,OAAOO,KAAI,SAACC,EAAOC,GAEtC,IAAIC,EAAMhB,EAAOM,OAKjB,OAFAQ,EAAQA,IAAUE,EAAIA,EAAIC,OAAO,IAAMH,IAAUE,EAAIA,EAAIC,OAAO,GAAxD,UAA+DH,EAA/D,MAA0EA,IAAUE,EAAIA,EAAIC,OAAO,GAAzB,UAAgCH,EAAhC,iBAA8CA,GAG5H,0BAAMI,IAAKH,GAAQD,cAOjBL,IAAtBF,KAAKC,MAAMR,OAGX,6BACI,oFAKR,O,GA/D6BmB,c,wCCYhBC,E,YACjB,WAAYZ,GAAQ,IAAD,8BACf,4CAAMA,KAEDa,MAAQ,CACTC,MAAO,GACPtB,OAAQ,MALG,E,4EAUH,IAAD,OACXuB,QAAQC,IAAI,aAAcjB,KAAKc,OAE/B,IACMI,EAAS,UADA,qCACA,cAAoBlB,KAAKc,MAAMC,MAA/B,wBAGfI,MAAMD,EAAU,CACZE,OAAO,MACPC,QAAS,CACL,eAAgB,mBAChB,cAAiB9B,GAErB+B,KAAM,OACNC,MAAM,YAETC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAE1BF,MAAK,SAAAE,GACF,IAAIjC,EAASiC,EAAKC,QAAQC,MAAM,GAEhCZ,QAAQC,IAAI,SAAUxB,GAEtB,EAAKoC,SAAS,CACVpC,OAAQA,S,+BAKV,IAAD,OACL,OACI,yBAAKU,UAAU,OACX,yBAAKA,UAAU,aAAf,gBAEA,kBAAC2B,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACIC,KAAK,OACLC,YAAY,uBACZC,MAAOnC,KAAKc,MAAMC,MAClBqB,SACI,SAAAC,GACI,EAAKR,SAAS,CAACd,MAAOsB,EAAMC,OAAOH,SAG3CI,WACI,SAAAF,GACI,MAAqB,UAAdA,EAAM1B,IAAkB,EAAK6B,eAAiB,MAKjE,kBAACT,EAAA,EAAWU,OAAZ,KACI,kBAACC,EAAA,EAAD,CACIC,QAAS,kBAAI,EAAKH,iBAElB,kBAAC,IAAD,UAKhB,kBAAC,EAAD,CACI/C,OAAUO,KAAKc,MAAMrB,SAGzB,yBAAKU,UAAU,WAAf,gB,GA5EiBS,aCXjCgC,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.4bab0734.chunk.js","sourcesContent":["// export const authEndpoint = \"https://accounts.spotify.com/authorize?\";\r\n\r\n// // Replace with your app's client ID, redirect URI and desired scopes\r\n// export const clientId = \"96fddf30b44b417e8427c597040731cc\";\r\n\r\n// // if (location.hostname === \"localhost\" || location.hostname === \"127.0.0.1\") {\r\n// //     export const redirectUri = \"http://localhost:3000/callback\";\r\n// // } else {\r\n// //     export const redirectUri = \"http://localhost:3000/callback\";\r\n// // }\r\n// export const LOCAL_DOMAINS = [\"localhost\", \"127.0.0.1\"];\r\n// LOCAL_DOMAINS.includes(window.location.hostname) ? alert(window.location.hostname) : alert(window.location.hostname);\r\n\r\n// let redirectUrl = LOCAL_DOMAINS.includes(window.location.hostname) ? \"http://localhost:3000/musicmaster/callback\" : `${window.location.hostname}/musicmaster/callback`;\r\n// export const redirectUri = redirectUrl;\r\n\r\n// // export const redirectUri = \"http://localhost:3000/callback\";\r\n// export const responseType = \"token\";\r\n// export const showDialog = \"false\";\r\n// export const scopes = [\r\n//     \"user-top-read\",\r\n//     \"user-read-currently-playing\",\r\n//     \"user-read-playback-state\",\r\n// ];\r\n\r\nexport const TOKEN = 'BQAIXPXoX1MWl57UFPi6sAtw_5RDfa-4d4Ywj-3AECj5id1kYaVChadzsjmhrHW7bLETSAQGeVkR4Btn7YMlNKqs7oNXNjWxDO5XbvSFa9W3hcsEvFWURk3rqx5CHKuuxfqb7VmSPFqzkYvalU_2MU-nXKbUIS__PoUL_UE7AUF8DUMYUW8DqBWsMdmpbb8WN98RESGDBAX7qpM4-_rPXU-S-0fFIn5MXj8YZKL12vXpCRQdgEoUC3j39KAXj-cKhzEzbuul89ptgyBkHwtcPtVf-_RDnjT-7g'\r\nexport const REFRESH_TOKEN = 'AQAlIuF03grT4SbMDAkLRBjjTsaI37dWK4U9wQf4bKg3d_iO3thRgoOiOHCR6LabfSANHP9bjh4LO5oimbREF4Z0Vs2qP_XQBzoMvgxSsMG7jfMyPYLTfeE3c8Hcim1Ti8I'\r\n// export const AUTH_TOKEN = `Bearer ${TOKEN}&refresh_token=${REFRESH_TOKEN}`;\r\nexport const AUTH_TOKEN = `Bearer ${TOKEN}`\r\n// export const auth_token = 'Bearer BQA-x_WO9f986p7wn5BrbJGChE4QqBuVbh5iaqgauyfwjX6P27X2yYeBeJY5N3CWeheENaLcZpzjU8J2GG8pkdinOH6NFzhdBXprxa5yiKO0isVKQXz5IKKRa6C7_x2eFV5J7CTRTRYgde7X0P68b6VRhIhf9KBdEIRIylvWva4bN0HDCO8LbYzonoaKG0d7GNOqNBwDPz9mVEht&refresh_token=AQAlIuF03grT4SbMDAkLRBjjTsaI37dWK4U9wQf4bKg3d_iO3thRgoOiOHCR6LabfSANHP9bjh4LO5oimbREF4Z0Vs2qP_XQBzoMvgxSsMG7jfMyPYLTfeE3c8Hcim1Ti8I';\r\n","import React, { Component } from 'react'\r\nimport '../css/app.css'\r\n\r\nexport default class Profile extends Component {\r\n    render() {\r\n        // console.log('this.props',this.props);\r\n\r\n        let artist = {\r\n            name: '',\r\n            followers: {\r\n                total: ''\r\n            },\r\n            images: [\r\n                {url: ''}\r\n            ],\r\n            genres: []\r\n        }\r\n        \r\n        // get the artist from query if query object exists otherwise artist is blank\r\n        artist = this.props.artist !== null && this.props.artist !== undefined ? this.props.artist : artist;\r\n        \r\n        // ternary that checks what to render\r\n        return this.props.artist !== undefined && this.props.artist !== null ? (\r\n            \r\n            // render the artist profile\r\n            <div className='profile'>                \r\n                <img\r\n                    className='profile-img'\r\n                    src={artist.images[0].url}\r\n                    alt=''\r\n                />\r\n                \r\n                <div className='profile-info'>\r\n                    <div className='profile-name'>\r\n                        Artist Name: {artist.name}\r\n                    </div>\r\n\r\n                    <div className='profile-followers'>\r\n                        Total followers: {artist.followers.total}\r\n                    </div>\r\n\r\n                    <div className='profile-genres'>               \r\n                        Artist genres: {artist.genres.map((genre, index) => {\r\n                            \r\n                            let ags = artist.genres;\r\n                            \r\n                            // separate genres by commas, if second to last add a space and if last add '&' before genre\r\n                            genre = genre !== ags[ags.length-1] && genre !== ags[ags.length-2] ?`${genre}, `: genre === ags[ags.length-2] ?`${genre} `:`& ${genre}`;\r\n\r\n                            return(\r\n                                <span key={index}>{genre}</span>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        ) : this.props.artist === undefined ? (\r\n            \r\n            // render error/warning message\r\n            <div>\r\n                <p>Please provide a valid artist name and search again.</p>\r\n            </div>\r\n\r\n        ) : \r\n        // do not render html\r\n        '';\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport { AUTH_TOKEN } from \"./configs/config\"\r\n\r\nimport Profile from './components/profile'\r\n\r\n\r\nimport { FormGroup, FormControl, InputGroup, Button } from 'react-bootstrap'\r\nimport { GoSearch } from \"react-icons/go\"\r\n\r\nimport './css/app.css'\r\n\r\n// import { authEndpoint, clientId, redirectUri, responseType, scopes, showDialog } from \"./config\";\r\n// import hash from \"./hash\";\r\n\r\n\r\nexport default class App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            query: '',\r\n            artist: null,\r\n        }\r\n    }\r\n\r\n    \r\n    searchArtist() {\r\n        console.log('this.state', this.state);\r\n         \r\n        const BASE_URL='https://api.spotify.com/v1/search?';\r\n        const FETCH_URL = `${BASE_URL}q='${this.state.query}&type=artist&limit=1`;\r\n        // // const ALBUM_URL = 'https://api.spotify.com/v1/artists/';\r\n\r\n        fetch(FETCH_URL,{\r\n            method:'GET',\r\n            headers: {\r\n                'Content-Type' :'application/json',\r\n                'Authorization': AUTH_TOKEN,\r\n            },\r\n            mode: 'cors',\r\n            cache:'default'\r\n        })\r\n        .then(response => response.json())\r\n        // .then(json => console.log('json', json))\r\n        .then(json => {\r\n            let artist = json.artists.items[0];\r\n                        \r\n            console.log('artist', artist);\r\n            \r\n            this.setState({\r\n                artist: artist,\r\n            })\r\n        });\r\n    }   \r\n\r\n    render() {\r\n        return (\r\n            <div className=\"app\">\r\n                <div className=\"app-title\">Music Master</div>\r\n                \r\n                <FormGroup>\r\n                    <InputGroup>\r\n                        <FormControl \r\n                            type=\"text\"\r\n                            placeholder=\"search for an artist\"\r\n                            value={this.state.query}\r\n                            onChange={\r\n                                event => {\r\n                                    this.setState({query: event.target.value})\r\n                                }\r\n                            }\r\n                            onKeyPress={\r\n                                event => {\r\n                                    return event.key === 'Enter' ? this.searchArtist() : '';\r\n                                }\r\n                            }\r\n                        />\r\n                            \r\n                        <InputGroup.Append>\r\n                            <Button \r\n                                onClick={()=>this.searchArtist()}\r\n                            >\r\n                                <GoSearch />\r\n                            </Button>\r\n                        </InputGroup.Append>\r\n                    </InputGroup>\r\n                </FormGroup>\r\n                <Profile\r\n                    artist = {this.state.artist}\r\n                />\r\n\r\n                <div className=\"gallery\">\r\n                    Gallery\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './app'\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n)"],"sourceRoot":""}